<?php

namespace jarekkozak\kie\heartbeat;

use jarekkozak\kie\KieClient;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-05-06 at 09:33:25.
 */
class KieHBTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var KieHB
     */
    protected $object;
    protected $property;
    protected $client;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->property = new \jarekkozak\sys\PropertiesFile([
            'filename' => '$HOME/.secret/kiesrv-secret'
        ]);
        if ($this->property->getProperty('kie-server') == NULL) {
            echo 'Property file does not exist:';
            echo 'With content:';
            echo 'kie-server=exchange_address_with_context';
            echo 'kie-user=username or email';
            echo 'kie-password=password';
        }
        $this->client = new KieClient([
            'context' => $this->property->getProperty('kie-server'),
            'username' => $this->property->getProperty('kie-user'),
            'password' => $this->property->getProperty('kie-password'),
        ]);

    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {

    }

    /**
     * @covers jarekkozak\kie\heartbeat\KieHB::listenHeart
     */
    public function testListenHeart()
    {
        $hb = new KieHB([
            'client' => $this->client,
        ]);
        $this->assertTrue($hb->listenHeart());
    }

    /**
     * @covers jarekkozak\kie\heartbeat\KieHB::getHeartBeat
     */
    public function testGetHeartBeat()
    {
        $hb = new KieHB([
            'client' => $this->client,
        ]);
        $res = $hb->getHeartBeat();
        $this->assertCount(2,$res);
    }

}