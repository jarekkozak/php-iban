<?php

namespace jarekkozak\kie\converters;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-05-05 at 09:14:03.
 */
class KieMomentConverterTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var KieMomentConverter
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new KieMomentConverter;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {

    }

    /**
     * @covers jarekkozak\kie\KieMomentConverter::toObject
     */
    public function testToObject()
    {

        $convert = new KieMomentConverter();
        $moment = $convert->toObject('2015-01-01 12:12:34.0 UTC');
        $exp = new \Moment\Moment('2015-01-01T12:12:34Z');
        self::assertTrue($exp->isSame($moment));
        
        // @todo check locales
//        $convert = new KieMomentConverter(['format'=>'g:i:sa \o\n l jS F Y T']);
//        $moment = $convert->toObject('12:12:34pm on Thursday 1rd February 2015 UTC');
//        $exp = new \Moment\Moment('2015-01-01T12:12:34Z');
//        self::assertTrue($exp->isSame($moment));



    }

    /**
     * @covers jarekkozak\kie\KieMomentConverter::toObject
     * @expectedException InvalidArgumentException
     */
    public function testToObject11()
    {

        $convert = new KieMomentConverter();
        $moment = $convert->toObject('2015-01-01 12:12:34.A UTC');

    }

    /**
     * @covers jarekkozak\kie\KieMomentConverter::toString
     */
    public function testToString()
    {
        $moment = new \Moment\Moment('2015-01-01T12:12:34Z');
        $convert = new KieMomentConverter();
        self::assertEquals('2015-01-01 12:12:34.000000 UTC',$convert->toString($moment));
        // @todo check locales
//        $moment = new \Moment\Moment('2015-01-01T12:12:34Z');
//        $convert = new KieMomentConverter(['format'=>'g:i:sa \o\n l jS F Y T']);
//        self::assertEquals('12:12:34pm on Thursday 1rd January 2015 UTC',$convert->toString($moment));

    }




}